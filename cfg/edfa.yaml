backbone:
  [[-1, 1, WTA, [320, 4, 4, 3]],
   
   [-1, 1, Conv, [32, 3, 2, None, 1, nn.ReLU6()]],
   
   [-1, 1, Block, [16, 1, 1]],
   [-1, 1, Block, [24, 2, 6]],
   [-1, 1, Block, [24, 1, 6]],
   [-1, 1, Block, [32, 2, 6]],
   [-1, 1, Block, [32, 1, 6]],
   [-1, 1, Block, [32, 1, 6]],                        # 7 - P3
   [-1, 1, Block, [64, 2, 6]],
   [-1, 1, Block, [64, 1, 6]],
   [-1, 1, Block, [64, 1, 6]],
   [-1, 1, Block, [64, 1, 6]],
   [-1, 1, Block, [96, 1, 6]],
   [-1, 1, Block, [96, 1, 6]],
   [-1, 1, Block, [96, 1, 6]],                        # 14 - P4
   [-1, 1, Block, [160, 2, 6]],
   [-1, 1, Block, [160, 1, 6]],
   [-1, 1, Block, [160, 1, 6]],
   [-1, 1, Block, [320, 1, 6]],                       # 18 - P5
  ]

neck:
  [[-1, 1, Conv, [96, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 14], 1, Concat, [1]],
   
   [-1, 1, EDFA, [96, 40]],                       # 22
   
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 7], 1, Concat, [1]],
   
   [-1, 1, EDFA, [32, 80]],                       # 26
   
   [-1, 1, Conv, [32, 3, 2, None, 1, nn.ReLU()]],
   [[-1, 23], 1, Concat, [1]],
   
   [-1, 1, EDFA, [64, 40]],                       # 29
   
   [-1, 1, Conv, [96, 3, 2, None, 1, nn.ReLU()]],
   [[-1, 19], 1, Concat, [1]],
   
   [-1, 1, EDFA, [192, 20]],                      # 32
  ]

head:
  [[[26, 29, 32], 1, Detect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
