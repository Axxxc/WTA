nc: 20  # number of classes

anchors:
  - [16,8, 10,17, 30,14]  # P3/8
  - [16,32, 54,26, 32,62]  # P4/16
  - [79,108, 159,155, 330,350]  # P5/32

backbone:
  [[-1, 1, Conv, [32, 3, 2, None, 1, nn.ReLU()]],  # 0-P1/2  
  
   [-1, 1, Conv, [64, 3, 2, None, 1, nn.ReLU()]],  # 1-P2/4    
   
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [32, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.ReLU()]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],  # 7
   
   [-1, 1, MP, []],  # 8-P3/8
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.ReLU()]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]],  # 14
   
   [-1, 1, MP, []],  # 15-P4/16
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [128, 3, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [128, 3, 1, None, 1, nn.ReLU()]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.ReLU()]],  # 21
   
   [-1, 1, MP, []],  # 22-P5/32
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [256, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [256, 3, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [256, 3, 1, None, 1, nn.ReLU()]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [512, 1, 1, None, 1, nn.ReLU()]],  # 28
  ]

neck:
  [[-1, 1, Conv, [256, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [256, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, SP, [5]],
   [-2, 1, SP, [9]],
   [-3, 1, SP, [13]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.ReLU()]],
   [[-1, -7], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.ReLU()]],  # 37
  
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [21, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]], # route backbone P4
   [[-1, -2], 1, Concat, [1]],
   
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.ReLU()]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]],  # 47
  
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [14, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]], # route backbone P3
   [[-1, -2], 1, Concat, [1]],
   
   [-1, 1, Conv, [32, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [32, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [32, 3, 1, None, 1, nn.ReLU()]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],  # 57
   
   [-1, 1, Conv, [128, 3, 2, None, 1, nn.ReLU()]],
   [[-1, 47], 1, Concat, [1]],
   
   [-1, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [64, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [64, 3, 1, None, 1, nn.ReLU()]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]],  # 65
   
   [-1, 1, Conv, [256, 3, 2, None, 1, nn.ReLU()]],
   [[-1, 37], 1, Concat, [1]],
   
   [-1, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]],
   [-2, 1, Conv, [128, 1, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [128, 3, 1, None, 1, nn.ReLU()]],
   [-1, 1, Conv, [128, 3, 1, None, 1, nn.ReLU()]],
   [[-1, -2, -3, -4], 1, Concat, [1]],
   [-1, 1, Conv, [256, 1, 1, None, 1, nn.ReLU()]],  # 73
  ]

head:
  [[57, 1, Conv, [128, 3, 1, None, 1, nn.ReLU()]],
   [65, 1, Conv, [256, 3, 1, None, 1, nn.ReLU()]],
   [73, 1, Conv, [512, 3, 1, None, 1, nn.ReLU()]],

   [[74,75,76], 1, IDetect, [nc, anchors]],   # Detect(P3, P4, P5)
  ]
